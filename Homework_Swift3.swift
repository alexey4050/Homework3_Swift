/** 1. Есть словарь с видами чая и их стоимостью.
 Есть очередь людей, которые хотят заказать чай (можно представить ее в виде массива видов чая, которые хотят заказать).
 Необходимо последовательно выводить в консоль сколько заплатит покупатель ( необходимо вывести его номер по порядку, чай,
  который он заказал и стоимость)
 */
enum Tea {
    case black 
    case green 
    case mix  
}
let b: [Tea] = [.black, .mix, .green, .green, .mix, .black] 

func getSum(a: [Tea: Double]){
    for(i, type) in b.enumerated(){
        let price = a[type]
        print("Номер в очереди: \(i), вид чая: \(type), стоимость чая: \(price ?? 0)")
    }
 }

/** 2. Есть массив [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]. 
Необходимо создать новый массив, который будет состоять из элементов старого, 
но не должно быть nil, не должно быть 0 и 4, а также массив должен быть отсортирован по возрастанию
 */

 var a = [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]
 var b = a.compactMap { $0 }.filter { $0 != 0 && $0 != 4 }.sorted{ $0 < $1 }
 print(b)

 /** 3.Написать функцию, которая на вход принимает целое число, 
 а возвращает массив, который сформирован по следующим правилам: 
 количество элементов соответствует переданному числу, массив начинается с 1, 
 каждый последующий элемент больше предыдущего в 2 раза.*/

func getNum(number: Int) -> [Int] {
    var result = [Int]()
    var k = 1
    for _ in 1...number{
        k *= 2
    result.append(k)
    }    
return result
}
print(getNum(number: 19))